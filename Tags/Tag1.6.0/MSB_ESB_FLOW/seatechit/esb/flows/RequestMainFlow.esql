











































/*
*
* File Name: RequestMainFlow.esql
*
* Purpose: Main input point of all flow
*
* Authors: Vu Trung Kien
*
* Date 12 Dec 2012
* Version: 1.0
*
* @copyright Seatechit . 2012. All rights reserved.
*
*/
BROKER SCHEMA seatechit.esb.flows

CREATE COMPUTE MODULE RequestMainFlow_Routing

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		/*DECLARE SQLState1 CHARACTER;
		DECLARE SQLErrorText1 CHARACTER;
		DECLARE SQLCode1 INTEGER;
		DECLARE SQLNativeError1 INTEGER;*/
		
		--1)Khai bao bien dung trong msg
		DECLARE req_app CHARACTER InputRoot.XMLNSC.Data.Header.req_app;
		DECLARE srv_app CHARACTER InputRoot.XMLNSC.Data.Header.srv_app;
		DECLARE srv CHARACTER InputRoot.XMLNSC.Data.Header.srv;
		--2)Ghi nhan thoi gian bat dau xu ly msg
		--DECLARE curr_time CHAR CURRENT_TIME;
		--DECLARE curr_date CHAR CURRENT_DATE;
		DECLARE retErrorCode INTEGER 0;

		DECLARE dest_queue CHARACTER;
		DECLARE rply_queue CHARACTER;
		DECLARE service_url CHARACTER;
		DECLARE service_timeout INTEGER 0;
		--3)Valid mot so dieu kien co ban
		--SET retErrorCode=ValidXMLHeader();
		--IF retErrorCode<>0 THEN
		-- THROW USER EXCEPTION VALUES(retErrorCode, 'MISSING FIELD', NULL, 'MISSING FIELD' );
		-- RETURN FALSE;
		--END IF;

		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		CALL CopyMessageId();


		SET OutputRoot.XMLNSC.Data.Header.req_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy HH:mm:ss.SSS');
		--Kienvt: 20130708:Them tam doan ghi log OTP
		IF srv='OTP001' THEN
			--SET OutputRoot.XMLNSC.Data.Header.req_time=CAST(InputRoot.MQMD.PutDate AS CHARACTER FORMAT 'dd/MM/yyyy')
			--||' '||CAST(InputRoot.MQMD.PutTime AS CHARACTER FORMAT 'HH:mm:ss.SSS');

			DECLARE v_sql CHARACTER 'INSERT INTO ESB_LOG_OTP(MESSAGE_SN,INST_TIME,CURR_TIME,CURR_DT,IN_OUT)
			VALUES('''||InputRoot.XMLNSC.Data.Header.req_id||''','''
			||CAST(InputRoot.MQMD.PutTime AS CHARACTER FORMAT 'HHmmss')||''','''
			||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HHmmss')||''',SYSDATE,''I'')';
			PASSTHRU(v_sql);

		END IF;
		--end 20130708---

		SET OutputLocalEnvironment.XMLNSC.queue_name_list[] =
		(
		SELECT a.qmgr_name as queueManagerName, a.queue_name as queueName
		FROM CacheRoutingTable.DestinationData[] as a
		WHERE a.receiver_id = srv_app
		--WHERE a.tran_code = srv AND a.sender_id = req_app AND a.receiver_id = srv_app
		);
		SET dest_queue=OutputLocalEnvironment.XMLNSC.queue_name_list.queueName;
		SET rply_queue=OutputLocalEnvironment.XMLNSC.queue_name_list.rplyQueueName;
		--4)Routing message
		IF CARDINALITY (OutputLocalEnvironment.XMLNSC.queue_name_list[])> 0 THEN
			SET OutputDestinationList.Destination.MQDestinationList.DestinationData[1].queueName = dest_queue;
			SET OutputRoot.MQMD.ReplyToQ = 'ESB.REP.INBOX'; --rply_queue;
		ELSE
			--Refresh queue
			SET OutputDestinationList.Destination.MQDestinationList.DestinationData[1].queueName = 'ESB.RFH.OUTBOX';
			SET OutputRoot.MQMD.ReplyToQ = 'ESB.RFH.OUTBOX'; --rply_queue;
		END IF;



		/*SET SQLCode1 = SQLCODE;
		IF SQLCode1 <> 0 THEN
			SET SQLState1 = SQLSTATE;
			SET SQLErrorText1 = SQLERRORTEXT;
			SET SQLNativeError1 = SQLNATIVEERROR;
			THROW USER EXCEPTION MESSAGE 2950 VALUES('The SQL State' , SQLState1 , SQLCode1 , SQLNativeError1 , SQLErrorText1);
		END IF;*/

		RETURN TRUE;
	END;


	CREATE FUNCTION ValidXMLHeader()RETURNS INTEGER BEGIN
		DECLARE retErrorCode INTEGER 0;
		DECLARE req_app CHARACTER;
		DECLARE srv_app CHARACTER;
		DECLARE srv CHARACTER;
		SET srv = InputRoot.XMLNSC.Data.Header.srv;
		SET req_app = InputRoot.XMLNSC.Data.Header.req_app;
		SET srv_app = InputRoot.XMLNSC.Data.Header.srv_app;

		IF srv IS NULL THEN
			SET retErrorCode= 1;
		ELSEIF req_app IS NULL THEN
			SET retErrorCode= 2;
		ELSEIF srv_app IS NULL THEN
			SET retErrorCode= 3;
		END IF;
		RETURN retErrorCode;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot=InputRoot;
	END;

	CREATE PROCEDURE CopyMessageId() BEGIN
		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
	END;


END MODULE;