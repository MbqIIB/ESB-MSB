

/**
* Post process for IBS Flow
* @author: DatLT
*/

BROKER SCHEMA seatechit.esb.flows
CREATE COMPUTE MODULE IBSOutFlow_PreProcess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		DECLARE q0 NAMESPACE 'http://retail.ibs.geong.com/xsd';
		DECLARE q1 NAMESPACE 'http://pojo.ws.retail.ibs.geong.com/xsd';

		DECLARE curr_time CHAR CURRENT_TIME;
		DECLARE curr_date CHAR CURRENT_DATE;

		DECLARE srv CHARACTER InputRoot.XMLNSC.Data.Header.srv;

		SET OutputLocalEnvironment.XMLNS.Messages.Request.Data = (SELECT * FROM InputRoot.XMLNSC.Data);
		SET OutputLocalEnvironment.XMLNS.Messages.Response.Data.Header = (SELECT * FROM InputRoot.XMLNSC.Data.Header);
		SET OutputLocalEnvironment.XMLNS.Messages.Control.tllog.rcv_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.tllog.rcv_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.rcv_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.rcv_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.req_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.req_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');

		SET OutputRoot.MQMD.Encoding = 546;
		SET OutputRoot.MQMD.CodedCharSetId = 1208;
		SET Environment.MQMD = InputRoot.MQMD;

		SET OutputRoot.Properties.MessageType = 'Envelope';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:q0='http://retail.ibs.geong.com/xsd';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:q1='http://pojo.ws.retail.ibs.geong.com/xsd';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:xsd='http://www.w3.org/2001/XMLSchema';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance';


		If srv ='IBS003' then
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:cifNo = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.cifNo;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:email = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.email;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:gender = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.gender;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:groupId = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.groupId;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:mobile = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.mobile;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:openMbs = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.openMbs;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:securityType = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.securityType;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:userInfo.q1:userName = InputRoot.XMLNSC.Data.Body.registerNewService.userInfo.userName;

			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:tokenNo = InputRoot.XMLNSC.Data.Body.registerNewService.tokenNo;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:tellerId = InputRoot.XMLNSC.Data.Body.registerNewService.tellerId;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:sentDate = InputRoot.XMLNSC.Data.Body.registerNewService.sentDate;

			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:acctNoList.q1:acctNo = InputRoot.XMLNSC.Data.Body.registerNewService.acctNoList.RelatedAccountWS.acctNo;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:acctNoList.q1:alias = InputRoot.XMLNSC.Data.Body.registerNewService.acctNoList.RelatedAccountWS.alias;

			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:appReg = InputRoot.XMLNSC.Data.Body.registerNewService.appReg;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerNewService.q0:brandCode = InputRoot.XMLNSC.Data.Body.registerNewService.brandCode;

		ELSE
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:cifNo = InputRoot.XMLNSC.Data.Body.registerService.userInfo.cifNo;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:email = InputRoot.XMLNSC.Data.Body.registerService.userInfo.email;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:gender = InputRoot.XMLNSC.Data.Body.registerService.userInfo.gender;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:groupId = InputRoot.XMLNSC.Data.Body.registerService.userInfo.groupId;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:mobile = InputRoot.XMLNSC.Data.Body.registerService.userInfo.mobile;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:openMbs = InputRoot.XMLNSC.Data.Body.registerService.userInfo.openMbs;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:securityType = InputRoot.XMLNSC.Data.Body.registerService.userInfo.securityType;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:userInfo.q1:userName = InputRoot.XMLNSC.Data.Body.registerService.userInfo.userName;

			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:tokenNo = InputRoot.XMLNSC.Data.Body.registerService.tokenNo;

			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:acctNoList.q1:acctNo = InputRoot.XMLNSC.Data.Body.registerService.acctNoList.RelatedAccountWS.acctNo;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:registerService.q0:acctNoList.q1:alias = InputRoot.XMLNSC.Data.Body.registerService.acctNoList.RelatedAccountWS.alias;
		END IF;		

		-- DECLARE srv_app CHARACTER InputRoot.XMLNS.Data.Header.srv_app;
		SET OutputLocalEnvironment.XMLNS.url_list[]=
		(
		SELECT a.service_url,a.service_timeout
		FROM CacheServiceURLTable.ServiceInfoData[] as a
		WHERE a.service_id=srv
		);
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'POST';
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = OutputLocalEnvironment.XMLNS.url_list.service_url; --'http://10.0.2.51/IBS-Transaction-Center/services/RetailRegisterService.RetailRegisterServiceHttpSoap11Endpoint/';
		--Kienvt: 2013-05-04 add them timeout
		SET OutputLocalEnvironment.Destination.HTTP.Timeout = OutputLocalEnvironment.XMLNS.url_list.service_timeout;
		--end 2013-05-04
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
/**
* Post process for IBS Flow
* @author: DatLT
*/

CREATE COMPUTE MODULE IBSOutFlow_PostProcess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		SET OutputRoot.MQMD = Environment.MQMD;

		DECLARE ns NAMESPACE 'http://retail.ibs.geong.com/xsd';
		DECLARE psrv CHARACTER InputLocalEnvironment.Headermsg.srv;

		DECLARE curr_time CHAR CURRENT_TIME;
		DECLARE curr_date CHAR CURRENT_DATE;

		SET OutputRoot.XMLNS.Messages = InputLocalEnvironment.XMLNS.Messages;
		SET OutputRoot.XMLNS.Messages.Control.msglog.rsp_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputRoot.XMLNS.Messages.Control.msglog.rsp_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');

		If psrv ='IBS001' then
			DECLARE preturn CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns:registerServiceResponse.ns:return;
			SET OutputRoot.XMLNS.Messages.Response.Data.Body.registerService.out=preturn;
		ELSE
			DECLARE pout CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns:registerNewServiceResponse.ns:return;
			SET OutputRoot.XMLNS.Messages.Response.Data.Body.registerNewService.out=pout;
		END IF;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;