



BROKER SCHEMA seatechit.esb.flows

DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
DECLARE soap NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
CREATE COMPUTE MODULE SMSOutFlow_SMS_PreProcess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		DECLARE q0 NAMESPACE 'http://sms.cnn.msb.com.vn';
		DECLARE q1 NAMESPACE 'http://smsinfo.sms.cnn.msb.com.vn';
		DECLARE curr_time CHAR CURRENT_TIME;
		DECLARE curr_date CHAR CURRENT_DATE;

		DECLARE srv CHARACTER InputRoot.XMLNSC.Data.Header.srv;

		SET OutputLocalEnvironment.XMLNS.Messages.Request.Data = (SELECT * FROM InputRoot.XMLNSC.Data);
		SET OutputLocalEnvironment.XMLNS.Messages.Response.Data.Header = (SELECT * FROM InputRoot.XMLNSC.Data.Header);
		SET OutputLocalEnvironment.XMLNS.Messages.Control.tllog.rcv_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.tllog.rcv_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.rcv_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.rcv_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.req_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputLocalEnvironment.XMLNS.Messages.Control.msglog.req_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		--SET OutputLocalEnvironment.Headermsg = InputRoot.XMLNS.Data.Header;

		SET Environment.MQMD = InputRoot.MQMD;




		SET OutputRoot.MQMD.Encoding = 546;
		SET OutputRoot.MQMD.CodedCharSetId = 1208;
		-- Save the MQMD; sending to HTTP later in the flow destroys it
		--SET Environment.MQMD = InputRoot.MQMD;
		--add namespace;
		SET OutputRoot.Properties.MessageType = 'Envelope';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:q0='http://sms.cnn.msb.com.vn';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:xsd='http://www.w3.org/2001/XMLSchema';
		SET OutputRoot.XMLNS.soapenv:Envelope.(XML.NamespaceDecl)xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance';


		If srv ='SMS002' then
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:cifNumber = InputRoot.XMLNSC.Data.Body.regSMSBanking.cifNumber;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:accountNumber = InputRoot.XMLNSC.Data.Body.regSMSBanking.accountNumber;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:serviceType = InputRoot.XMLNSC.Data.Body.regSMSBanking.serviceType;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:alert = InputRoot.XMLNSC.Data.Body.regSMSBanking.alert;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:phoneNumber = InputRoot.XMLNSC.Data.Body.regSMSBanking.phoneNumber;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:branchCode = InputRoot.XMLNSC.Data.Body.regSMSBanking.branchCode;
			SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBanking.q0:appReg = InputRoot.XMLNSC.Data.Body.regSMSBanking.appReg;
		ELSE
			IF srv ='SMS001' then
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:putSMS.q0:SMSRequest.q1:content = InputRoot.XMLNSC.Data.Body.putSMS.SMSRequest.content;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:putSMS.q0:SMSRequest.q1:numberGW = InputRoot.XMLNSC.Data.Body.putSMS.SMSRequest.numberGW;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:putSMS.q0:SMSRequest.q1:phoneNumber = InputRoot.XMLNSC.Data.Body.putSMS.SMSRequest.phoneNumber;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:putSMS.q0:SMSRequest.q1:sequence = InputRoot.XMLNSC.Data.Body.putSMS.SMSRequest.sequence;
			ELSE
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:cifNumber = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.cifNumber;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:accountList = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.accountList;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:phoneNumber = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.phoneNumber;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:serviceType = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.serviceType;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:defaultAcc = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.defaultAcc;
				SET OutputRoot.XMLNS.soapenv:Envelope.soapenv:Body.q0:regSMSBankingFromIBS.q0:branchCode = InputRoot.XMLNSC.Data.Body.regSMSBankingFromIBS.branchCode;
			END IF;
		END IF;

		SET OutputLocalEnvironment.XMLNS.url_list[]=
		(
		SELECT a.service_url,a.service_timeout
		FROM CacheServiceURLTable.ServiceInfoData[] as a
		WHERE a.service_id=srv
		);
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'POST';
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = OutputLocalEnvironment.XMLNS.url_list.service_url; --SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://10.0.2.43/SMS/services/SMSBankingService'; --
		--Kienvt: 2013-05-04 add them timeout
		SET OutputLocalEnvironment.Destination.HTTP.Timeout = OutputLocalEnvironment.XMLNS.url_list.service_timeout;
		--end 2013-05-04

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE COMPUTE MODULE SMSOutFlow_SMS_PostProcess
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		-- Output is MQ, so remove HTTP headers
		--SET OutputRoot.HTTPResponseHeader = NULL;
		-- Output is CWF, so set target message properties
		--SET OutputRoot.Properties.MessageType = 'msg_tagIA81CONF';
		--SET OutputRoot.Properties.MessageFormat = 'CWF1';
		-- Create an MQMD and restore it to saved values
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		SET OutputRoot.MQMD = Environment.MQMD;


		DECLARE ns1 NAMESPACE 'http://sms.cnn.msb.com.vn';
		DECLARE ns2 NAMESPACE 'http://smsinfo.sms.cnn.msb.com.vn';
		DECLARE psrv CHARACTER InputLocalEnvironment.XMLNS.Messages.Request.Data.Header.srv;
		DECLARE curr_time CHAR CURRENT_TIME;
		DECLARE curr_date CHAR CURRENT_DATE;

		SET OutputRoot.XMLNS.Messages = InputLocalEnvironment.XMLNS.Messages;
		SET OutputRoot.XMLNS.Messages.Control.msglog.rsp_date=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'dd/MM/yyyy');
		SET OutputRoot.XMLNS.Messages.Control.msglog.rsp_time=CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'HH:mm:ss');
		--SET OutputRoot.MQMD=Environment.MQMD;
		--SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.CorrelId;
		--SET OutputRoot.MQMD.Format = MQFMT_ADMIN ;


		If psrv ='SMS002' then
			DECLARE pout CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns1:regSMSBankingResponse.ns1:out;
			SET OutputRoot.XMLNS.Messages.Response.Data.Body.regSMSBanking.out=pout;
			--SET OutputRoot.XMLNS.Data.Body.regSMSBanking.out=pout;
		Else
			If psrv ='SMS001' then
				DECLARE pcontent CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns1:putSMSResponse.ns1:out.ns2:content;
				DECLARE psequence CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns1:putSMSResponse.ns1:out.ns2:sequence;
				DECLARE pstatus CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns1:putSMSResponse.ns1:out.ns2:status;


				SET OutputRoot.XMLNS.Messages.Response.Data.Body.putSMS.out.SMSResponse.content=pcontent;
				SET OutputRoot.XMLNS.Messages.Response.Data.Body.putSMS.out.SMSResponse.sequence=psequence;
				SET OutputRoot.XMLNS.Messages.Response.Data.Body.putSMS.out.SMSResponse.status=pstatus;
			ELSE
				DECLARE pout CHARACTER InputRoot.XMLNS.soap:Envelope.soap:Body.ns1:regSMSBankingFromIBSResponse.ns1:out;

				SET OutputRoot.XMLNS.Messages.Response.Data.Body.regSMSBankingFromIBSResponse.out=pout;
			END IF;
		End if;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;